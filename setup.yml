#!/usr/bin/env ansible-playbook
# vim:ft=ansible :
# ============================================================
#  Author: chusiang / chusiang.lai (at) gmail.com
#  Blog: http://note.drx.tw
#  Filename: setup.yml
#  Modified: 2016-05-15 01:28
#  Description: Ansible Playbook fire demo for KaLUG 1605.
# =========================================================== 

---

# Ansible Playbook
#
# * Ansible Playbook 使用 YAML 格式。
# * 一個 Playbook 可以有多個 Play，且一個 Play 可以有多個 tasks。
# 

# Play 1
#########

- name: Run play 1 => Deploy Nginx.
  hosts: all                            # 允許所有受管機器執行。
  become: yes                           # 啟用 sudo 模式。

  # 變數 (Variables)
  #
  # * 可替換 task, template … 的值，此例是用來替換 index.html 裡的字串。
  # * 可用來進行條件判斷。 
  #
  vars:
    username: "chusiang"
    mail: "chusiang.lai (at) gmail.com"
    blog: "http://note.drx.tw"

  # 主程式 (Main)
  #
  tasks:
    # 執行 'apt-get update' 指令。
    - name: update apt repo cache
      apt: name=nginx update_cache=yes

    # 執行 'apt-get install nginx' 指令。
    - name: install nginx with apt
      apt: name=nginx state=present

    # 於網頁根目錄 (DocumentRoot) 編輯 index.html。
    - name: modify index.html
      template: >
        src=templates/index.html.j2
        dest=/usr/share/nginx/html/index.html
        owner=www-data
        group=www-data
        mode="644"
      notify: restart nginx

    # (security) 關閉 server_tokens。
    - name: turn server_tokens off
      # 移除 server_tokens 前的 '#' 字元。
      lineinfile: >
        dest=/etc/nginx/nginx.conf
        regexp="server_tokens off;"
        insertafter="# server_tokens off;"
        line="server_tokens off;"
        state=present
      notify: restart nginx

  # handlers 
  #
  # * 當確認事件有被觸發才會動作。
  # * 1 個 handler 可被多個 task 通知 (notify)，並於 tasks 跑完才會執行。
  #
  handlers:
    # 執行 'sudo service nginx restart' 指令。
    - name: restart nginx
      become: yes
      service: name=nginx enabled=yes state=restarted


# Play 2
#########

- name: Run play 2 => Check state.
  hosts: all                            # 允許所有受管機器執行。

  # 角色 (Roles)
  #
  # * Roles 可說是為了特定需求而封包好的 vars, tasks, handlers 集合體，以下為快速
  #   部署 Vim 和 vi-mode 的 role。
  # * 在 ansible-galaxy 可以找到各式各樣由社群維護的 roles，善加利用即可簡化並縮
  #   短開發時間。
  #
  roles:
    - chusiang.switch-apt-mirror
    - chusiang.vim-and-vi-mode

  tasks:
    # 檢查網頁伺服器行程。
    - name: check nginx process
      shell: "ps -A | grep 'nginx'"
      register: nginx_process

    # 檢查網頁內容。
    - name: review http state
      command: "curl -s http://localhost"
      register: http_state

    # Note:
    #
    #  我們可以使用 command 與 shell module 來跑 shell command 的指令，差別在於
    #  shell module 支援 '|', '&&', '||' 等較複雜的應用。 

    # 印出檢查結果。
    - name: print nginx process
      debug: msg={{ nginx_process.stdout_lines }}

    - name: print http state
      debug: msg={{ http_state.stdout_lines }}

